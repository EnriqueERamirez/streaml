version: '3.8'

services:
  transmission:
    container_name: transmission
    image: dperson/transmission
    restart: unless-stopped
    depends_on:
      - plex
    network_mode: host
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - USER= admin
      - PASS= admin
      # ... (resto de las variables de entorno específicas de transmission)
    volumes:
      - ./config/transmission:/var/lib/transmission-daemon/info
      - ${EXTERNAL_DISK}/downloads:/downloads
      - ${EXTERNAL_DISK}/incomplete:/var/lib/transmission-daemon/incomplete

  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: unless-stopped
    network_mode: host
    cpus: 2
    environment:
      - TZ=${TZ}
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
      # ... (resto de las variables de entorno específicas de plex)
    devices:
      - "/dev/dri:/dev/dri"
    volumes:
      - ./config/plex:/config
      - ${EXTERNAL_DISK}/transcode:/transcode
      - ${EXTERNAL_DISK}/tv:/data/tv
      - ${EXTERNAL_DISK}/movies:/data/movies

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    restart: unless-stopped
    depends_on:
      - transmission
      - plex
    network_mode: host
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./config/sonarr:/config
      - ${EXTERNAL_DISK}/tv:/tv
      - ${EXTERNAL_DISK}/downloads:/downloads

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    restart: unless-stopped
    depends_on:
      - transmission
      - plex
    network_mode: host
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./config/radarr:/config
      - ${EXTERNAL_DISK}/movies:/movies
      - ${EXTERNAL_DISK}/downloads:/downloads
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - CAPTCHA_SOLVER=none
      - TZ=${TZ}
    ports:
      - "8191:8191"
    restart: unless-stopped 
  jackett:
    container_name: jackett
    image: lscr.io/linuxserver/jackett:latest
    restart: unless-stopped
    ports:
      - 9117:9117
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ./config/jackett:/config
      - ${EXTERNAL_DISK}/downloads:/downloads 

  ombi:
    container_name: ombi
    image: lscr.io/linuxserver/ombi:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
      - EAP=1
    volumes:
      - ./config/ombi:/config

  iperf:
    container_name: iperf
    image: networkstatic/iperf3
    command: -s
    restart: unless-stopped
    network_mode: host

  netdata:
    container_name: netdata
    image: titpetric/netdata
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    network_mode: host
    volumes:
      - ./config/netdata:/etc/netdata
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - netdata-storage:/var/lib/netdata

  nextcloud:
    container_name: nextcloud
    image: nextcloud:latest
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      - UPLOAD_MAX_SIZE=2G
      - APC_SHM_SIZE=128M
      - OPCACHE_MEM_SIZE=128
      - CRON_PERIOD=15m
      - TZ=${TZ}
    volumes:
      - ${EXTERNAL_DISK}/cloud:/var/www/html/data
      - ./config/nextcloud/config:/var/www/html/config
      - ./config/nextcloud/apps:/var/www/html/custom_apps
      - ./config/nextcloud/themes:/var/www/html/themes

  mariadb:
    container_name: mariadb
    image: mariadb:10
    restart: unless-stopped
    network_mode: host
    environment:
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=
    volumes:
      - ./config/mariadb/data:/var/lib/mysql

  caddy:
    container_name: caddy
    image: caddy:latest
    restart: unless-stopped
    network_mode: host
    environment:
      - CADDYPATH=/etc/caddycerts
    volumes:
      - ./config/caddy/Caddyfile:/etc/Caddyfile
      - ./config/certs:/etc/caddycerts

volumes:
  netdata-storage:
    driver: local
